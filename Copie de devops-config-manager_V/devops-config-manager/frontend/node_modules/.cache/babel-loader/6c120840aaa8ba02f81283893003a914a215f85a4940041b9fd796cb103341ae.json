{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sifeddine\\\\Desktop\\\\devops-config-manager\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [xmlFile, setXmlFile] = useState(null);\n  const [validationMessage, setValidationMessage] = useState('');\n  const [yamlOutput, setYamlOutput] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isValid, setIsValid] = useState(false); // Ajout de l'état de validation\n\n  const handleFileChange = event => {\n    setXmlFile(event.target.files[0]);\n  };\n  const handleValidate = async event => {\n    event.preventDefault();\n    if (!xmlFile) {\n      setErrorMessage('Please choose a file to upload');\n      setValidationMessage('');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('xml_file', xmlFile);\n    try {\n      const response = await fetch('http://localhost:5000/validate_and_generate', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      if (result.status === 'success') {\n        setIsValid(true); // Le fichier est valide\n        setValidationMessage('Validation successful!');\n        setErrorMessage('');\n      } else {\n        setIsValid(false); // Le fichier est invalide\n        setValidationMessage('');\n        setErrorMessage(result.message);\n      }\n    } catch (error) {\n      setErrorMessage('An error occurred: ' + error.message);\n      setValidationMessage('');\n    }\n  };\n  const handleGenerateYaml = async event => {\n    event.preventDefault();\n    if (!isValid) {\n      setErrorMessage('XML file is not valid. Cannot generate YAML.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('xml_file', xmlFile);\n    try {\n      const response = await fetch('http://localhost:5000/validate_and_generate', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      if (result.status === 'success') {\n        setYamlOutput(result.yaml);\n        setErrorMessage('');\n      } else {\n        setYamlOutput('');\n        setErrorMessage(result.message);\n      }\n    } catch (error) {\n      setYamlOutput('');\n      setErrorMessage('An error occurred: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DevOps Configuration Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Choose XML file:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleValidate,\n          children: \"Validate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleGenerateYaml,\n          disabled: !isValid,\n          children: \"Generate YAML\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), validationMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Validation Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: validationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), yamlOutput && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated YAML:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: yamlOutput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"biceQJAiN0rTiPAUUAeQW3Iy5qE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","xmlFile","setXmlFile","validationMessage","setValidationMessage","yamlOutput","setYamlOutput","errorMessage","setErrorMessage","isValid","setIsValid","handleFileChange","event","target","files","handleValidate","preventDefault","formData","FormData","append","response","fetch","method","body","result","json","status","message","error","handleGenerateYaml","yaml","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Sifeddine/Desktop/devops-config-manager/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [xmlFile, setXmlFile] = useState(null);\n  const [validationMessage, setValidationMessage] = useState('');\n  const [yamlOutput, setYamlOutput] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isValid, setIsValid] = useState(false);  // Ajout de l'état de validation\n\n  const handleFileChange = (event) => {\n    setXmlFile(event.target.files[0]);\n  };\n\n  const handleValidate = async (event) => {\n    event.preventDefault();\n    if (!xmlFile) {\n      setErrorMessage('Please choose a file to upload');\n      setValidationMessage('');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('xml_file', xmlFile);\n\n    try {\n      const response = await fetch('http://localhost:5000/validate_and_generate', {\n        method: 'POST',\n        body: formData,\n      });\n\n      const result = await response.json();\n      if (result.status === 'success') {\n        setIsValid(true);  // Le fichier est valide\n        setValidationMessage('Validation successful!');\n        setErrorMessage('');\n      } else {\n        setIsValid(false);  // Le fichier est invalide\n        setValidationMessage('');\n        setErrorMessage(result.message);\n      }\n    } catch (error) {\n      setErrorMessage('An error occurred: ' + error.message);\n      setValidationMessage('');\n    }\n  };\n\n  const handleGenerateYaml = async (event) => {\n    event.preventDefault();\n    if (!isValid) {\n      setErrorMessage('XML file is not valid. Cannot generate YAML.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('xml_file', xmlFile);\n\n    try {\n      const response = await fetch('http://localhost:5000/validate_and_generate', {\n        method: 'POST',\n        body: formData,\n      });\n\n      const result = await response.json();\n      if (result.status === 'success') {\n        setYamlOutput(result.yaml);\n        setErrorMessage('');\n      } else {\n        setYamlOutput('');\n        setErrorMessage(result.message);\n      }\n    } catch (error) {\n      setYamlOutput('');\n      setErrorMessage('An error occurred: ' + error.message);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>DevOps Configuration Manager</h1>\n      <form>\n        <label>\n          Choose XML file:\n          <input type=\"file\" onChange={handleFileChange} />\n        </label>\n        <div>\n          <button type=\"button\" onClick={handleValidate}>Validate</button>\n          <button type=\"button\" onClick={handleGenerateYaml} disabled={!isValid}>Generate YAML</button>\n        </div>\n      </form>\n\n      {validationMessage && (\n        <div>\n          <h3>Validation Result:</h3>\n          <p>{validationMessage}</p>\n        </div>\n      )}\n\n      {yamlOutput && (\n        <div>\n          <h3>Generated YAML:</h3>\n          <pre>{yamlOutput}</pre>\n        </div>\n      )}\n\n      {errorMessage && (\n        <div className=\"error-message\">\n          <p>{errorMessage}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACO,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;;EAEhD,MAAMe,gBAAgB,GAAIC,KAAK,IAAK;IAClCV,UAAU,CAACU,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACnC,CAAC;EAED,MAAMC,cAAc,GAAG,MAAOH,KAAK,IAAK;IACtCA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB,IAAI,CAACf,OAAO,EAAE;MACZO,eAAe,CAAC,gCAAgC,CAAC;MACjDJ,oBAAoB,CAAC,EAAE,CAAC;MACxB;IACF;IAEA,MAAMa,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAElB,OAAO,CAAC;IAEpC,IAAI;MACF,MAAMmB,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;QAC1EC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,MAAMO,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACpC,IAAID,MAAM,CAACE,MAAM,KAAK,SAAS,EAAE;QAC/BhB,UAAU,CAAC,IAAI,CAAC,CAAC,CAAE;QACnBN,oBAAoB,CAAC,wBAAwB,CAAC;QAC9CI,eAAe,CAAC,EAAE,CAAC;MACrB,CAAC,MAAM;QACLE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;QACpBN,oBAAoB,CAAC,EAAE,CAAC;QACxBI,eAAe,CAACgB,MAAM,CAACG,OAAO,CAAC;MACjC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdpB,eAAe,CAAC,qBAAqB,GAAGoB,KAAK,CAACD,OAAO,CAAC;MACtDvB,oBAAoB,CAAC,EAAE,CAAC;IAC1B;EACF,CAAC;EAED,MAAMyB,kBAAkB,GAAG,MAAOjB,KAAK,IAAK;IAC1CA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB,IAAI,CAACP,OAAO,EAAE;MACZD,eAAe,CAAC,8CAA8C,CAAC;MAC/D;IACF;IAEA,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAElB,OAAO,CAAC;IAEpC,IAAI;MACF,MAAMmB,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;QAC1EC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,MAAMO,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACpC,IAAID,MAAM,CAACE,MAAM,KAAK,SAAS,EAAE;QAC/BpB,aAAa,CAACkB,MAAM,CAACM,IAAI,CAAC;QAC1BtB,eAAe,CAAC,EAAE,CAAC;MACrB,CAAC,MAAM;QACLF,aAAa,CAAC,EAAE,CAAC;QACjBE,eAAe,CAACgB,MAAM,CAACG,OAAO,CAAC;MACjC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdtB,aAAa,CAAC,EAAE,CAAC;MACjBE,eAAe,CAAC,qBAAqB,GAAGoB,KAAK,CAACD,OAAO,CAAC;IACxD;EACF,CAAC;EAED,oBACE7B,OAAA;IAAKiC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlC,OAAA;MAAAkC,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCtC,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAAkC,QAAA,GAAO,kBAEL,eAAAlC,OAAA;UAAOuC,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAE3B;QAAiB;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACRtC,OAAA;QAAAkC,QAAA,gBACElC,OAAA;UAAQuC,IAAI,EAAC,QAAQ;UAACE,OAAO,EAAExB,cAAe;UAAAiB,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChEtC,OAAA;UAAQuC,IAAI,EAAC,QAAQ;UAACE,OAAO,EAAEV,kBAAmB;UAACW,QAAQ,EAAE,CAAC/B,OAAQ;UAAAuB,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EAENjC,iBAAiB,iBAChBL,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAAkC,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BtC,OAAA;QAAAkC,QAAA,EAAI7B;MAAiB;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CACN,EAEA/B,UAAU,iBACTP,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAAkC,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBtC,OAAA;QAAAkC,QAAA,EAAM3B;MAAU;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CACN,EAEA7B,YAAY,iBACXT,OAAA;MAAKiC,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BlC,OAAA;QAAAkC,QAAA,EAAIzB;MAAY;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpC,EAAA,CA7GQD,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AA+GZ,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}