pipeline {
    agent any

    stages {
        stage('Checkout Code') {
            steps {
                echo "Checking out the code from GitHub..."
                git branch: 'main', credentialsId: 'githubtoken', url: 'https://github.com/abderahmaneraefat/devops.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Building Docker image..."
                bat 'echo Starting Docker build...'  // Message de débogage
                bat 'docker buildx build -t my-backend-image:latest -f Dockerfile . '  // Ajout de la commande avec options de débogage
                bat 'echo Docker image built!'  // Message pour vérifier que la commande a bien terminé
            }
        }

        stage('Run Docker Compose') {
            steps {
                echo "Starting services with Docker Compose..."
                bat 'echo Starting Docker Compose...'  // Message de débogage
                bat 'docker-compose -f generated_yamls/docker-compose.yaml up -d'  // Exécution de Docker Compose
                bat 'echo Docker Compose started!'  // Message pour vérifier que Docker Compose a démarré
            }
        }

        stage('Test Application') {
            steps {
                echo "Running tests on the application..."
                bat 'echo Running pytest tests...'  // Message de débogage
                bat 'pytest tests/test_app.py'  // Lancer les tests avec pytest
                bat 'echo Tests completed!'  // Message pour vérifier que les tests ont bien été exécutés
            }
        }

        stage('Push Docker Image') {
            steps {
                echo "Pushing Dockers image to Docker Hub..."
                withCredentials([usernamePassword(credentialsId: 'jenkins-token', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    // Connexion à Docker Hub avec les credentials
                    bat 'echo Logging in to Docker Hub...'
                    bat 'docker login -u %DOCKER_USER% -p %DOCKER_PASS%'
                    bat 'echo Docker login successful!'

                    // Taguer l'image Docker avec le nom d'utilisateur et l'image
                    bat 'echo Tagging Docker image...'
                    bat 'docker tag abderrahmaneraefat/my-backend-image:latest %DOCKER_USER%/my-backend-image:latest'
                    bat 'echo Docker image tagged!'

                    // Pousser l'image vers Docker Hub
                    bat 'echo Pushing Docker image to Docker Hub...'
                    bat 'docker push %DOCKER_USER%/my-backend-image:latest'
                    bat 'echo Docker image pushed to Docker Hub!'
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                echo "Deploying to Kubernetes..."
                bat 'echo Applying Kubernetes configurations...'
                bat 'kubectl apply -f generated_yamls/kubernetes.yml'
                bat 'echo Kubernetes deployment completed!'
            }
        }
    }
}
