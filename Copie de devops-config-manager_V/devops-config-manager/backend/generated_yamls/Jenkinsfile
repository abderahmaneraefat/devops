pipeline {
    agent any

    stages {
        stage('Checkout Code') {
            steps {
                echo "Checking out the code from GitHub..."
                git branch: 'main', credentialsId: 'githubtoken', url: 'https://github.com/abderahmaneraefat/devops.git'
            }
        }
        
        stage('Build Docker Image') {
            steps {
                echo "Building Docker image..."
                // Construire l'image Docker avec un nom spécifié
                sh 'docker build -t my-backend-image:latest -f ../Dockerfile .'  // 'my-backend-image' est un exemple de nom d'image
            }
        }
        
        stage('Run Docker Compose') {
            steps {
                echo "Starting services with Docker Compose..."
                // Exécuter docker-compose pour démarrer les services
                sh 'docker-compose -f docker-compose.yaml up -d'
            }
        }
        
        stage('Test Application') {
            steps {
                echo "Running tests on the application..."
                // Lancer les tests avec pytest
                sh 'pytest ../tests/test_app.py'  // Vérifiez le chemin vers vos tests
            }
        }
        
        stage('Push Docker Image') {
            steps {
                echo "Pushing Docker image to Docker Hub..."
                withCredentials([usernamePassword(credentialsId: 'githubtokenn', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    // Connexion à Docker Hub avec les credentials
                    sh 'docker login -u $DOCKER_USER -p $DOCKER_PASS'
                    
                    // Taguer l'image Docker avec le nom d'utilisateur et l'image
                    sh 'docker tag my-backend-image:latest $DOCKER_USER/my-backend-image:latest'
                    
                    // Pousser l'image vers Docker Hub
                    sh 'docker push $DOCKER_USER/my-backend-image:latest'
                }
            }
        }
        
        stage('Deploy to Kubernetes') {
            steps {
                echo "Deploying to Kubernetes..."
                // Appliquer la configuration Kubernetes
                sh 'kubectl apply -f kubernetes.yml'
            }
        }
    }
}
